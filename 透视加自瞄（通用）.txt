local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Player = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Frame2 = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local MinButton = Instance.new("TextButton")
local AimbotButton = Instance.new("TextButton")
local AimbotLabel = Instance.new("TextLabel")

local on = true
local BoxColor = Color3.fromRGB(0, 255, 50)
local BoxThickness = 1.4
local BoxTransparency = 1
local Tracers = true
local TracerColor = Color3.fromRGB(0, 255, 50)
local TracerThickness = 1.4
local TracerTransparency = 1
local AutoThickness = false
local TeamCheck = false
local Red = Color3.fromRGB(227, 52, 52)
local Green = Color3.fromRGB(88, 217, 24)

local function NewLine()
    local Line = Drawing.new("Line")
    Line.Visible = false
    Line.From = Vector2.new(0, 0)
    Line.To = Vector2.new(1, 1)
    Line.Color = BoxColor
    Line.Thickness = BoxThickness
    Line.Transparency = BoxTransparency
    return Line
end

local function CreateESP(PlayerObj)
    local Lines = {
        line1 = NewLine(),line2 = NewLine(),line3 = NewLine(),line4 = NewLine(),
        line5 = NewLine(),line6 = NewLine(),line7 = NewLine(),line8 = NewLine(),
        line9 = NewLine(),line10 = NewLine(),line11 = NewLine(),line12 = NewLine(),
        Tracer = NewLine()
    }
    Lines.Tracer.Color = TracerColor
    Lines.Tracer.Thickness = TracerThickness
    Lines.Tracer.Transparency = TracerTransparency

    local Connection
    Connection = RunService.RenderStepped:Connect(function()
        if not Players:FindFirstChild(PlayerObj.Name) then
            Connection:Disconnect()
            return
        end
        local Char = PlayerObj.Character
        if not on or not Char or not Char:FindFirstChild("Humanoid") or not Char:FindFirstChild("HumanoidRootPart") or PlayerObj.Name == Player.Name or Char.Humanoid.Health <= 0 or not Char:FindFirstChild("Head") then
            for _, Line in pairs(Lines) do Line.Visible = false end
            return
        end
        local Root = Char.HumanoidRootPart
        local _, Vis = Camera:WorldToViewportPoint(Root.Position)
        if Vis then
            local Scale = Char.Head.Size.Y / 2
            local Size = Vector3.new(2, 3, 1.5) * (Scale * 2)
            local Top1 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
            local Top2 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
            local Top3 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
            local Top4 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)
            local Bottom1 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
            local Bottom2 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
            local Bottom3 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
            local Bottom4 = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

            Lines.line1.From, Lines.line1.To = Vector2.new(Top1.X, Top1.Y), Vector2.new(Top2.X, Top2.Y)
            Lines.line2.From, Lines.line2.To = Vector2.new(Top2.X, Top2.Y), Vector2.new(Top3.X, Top3.Y)
            Lines.line3.From, Lines.line3.To = Vector2.new(Top3.X, Top3.Y), Vector2.new(Top4.X, Top4.Y)
            Lines.line4.From, Lines.line4.To = Vector2.new(Top4.X, Top4.Y), Vector2.new(Top1.X, Top1.Y)
            Lines.line5.From, Lines.line5.To = Vector2.new(Bottom1.X, Bottom1.Y), Vector2.new(Bottom2.X, Bottom2.Y)
            Lines.line6.From, Lines.line6.To = Vector2.new(Bottom2.X, Bottom2.Y), Vector2.new(Bottom3.X, Bottom3.Y)
            Lines.line7.From, Lines.line7.To = Vector2.new(Bottom3.X, Bottom3.Y), Vector2.new(Bottom4.X, Bottom4.Y)
            Lines.line8.From, Lines.line8.To = Vector2.new(Bottom4.X, Bottom4.Y), Vector2.new(Bottom1.X, Bottom1.Y)
            Lines.line9.From, Lines.line9.To = Vector2.new(Bottom1.X, Bottom1.Y), Vector2.new(Top1.X, Top1.Y)
            Lines.line10.From, Lines.line10.To = Vector2.new(Bottom2.X, Bottom2.Y), Vector2.new(Top2.X, Top2.Y)
            Lines.line11.From, Lines.line11.To = Vector2.new(Bottom3.X, Bottom3.Y), Vector2.new(Top3.X, Top3.Y)
            Lines.line12.From, Lines.line12.To = Vector2.new(Bottom4.X, Bottom4.Y), Vector2.new(Top4.X, Top4.Y)

            if Tracers then
                local TracePos = Camera:WorldToViewportPoint((Root.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                Lines.Tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                Lines.Tracer.To = Vector2.new(TracePos.X, TracePos.Y)
            end

            if TeamCheck then
                local TargetColor = PlayerObj.TeamColor == Player.TeamColor and Green or Red
                for _, Line in pairs(Lines) do Line.Color = TargetColor end
            end

            if AutoThickness then
                local Distance = (Player.Character.HumanoidRootPart.Position - Root.Position).magnitude
                local Thickness = math.clamp(1 / Distance * 100, 0.1, 4)
                for _, Line in pairs(Lines) do Line.Thickness = Thickness end
            else
                for _, Line in pairs(Lines) do Line.Thickness = BoxThickness end
            end

            for _, Line in pairs(Lines) do
                if Line ~= Lines.Tracer then Line.Visible = true end
            end
            Lines.Tracer.Visible = Tracers
        else
            for _, Line in pairs(Lines) do Line.Visible = false end
        end
    end)
end

for _, Plr in pairs(Players:GetChildren()) do
    coroutine.wrap(CreateESP)(Plr)
end
Players.PlayerAdded:Connect(function(NewPlr)
    coroutine.wrap(CreateESP)(NewPlr)
end)

ScreenGui.Parent = Player:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
Frame.BorderColor3 = Color3.fromRGB(16, 16, 16)
Frame.Position = UDim2.new(0.326547235, 0, 0.442340851, 0)
Frame.Size = UDim2.new(0.346905529, 0, 0.194492236, 0)
Frame2.Parent = Frame
Frame2.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Frame2.BorderColor3 = Color3.fromRGB(16, 16, 16)
Frame2.Size = UDim2.new(1, 0, 0.26777932, 0)
TextLabel.Parent = Frame2
TextLabel.BackgroundTransparency = 1
TextLabel.Size = UDim2.new(1.00234735, 0, 1.08253634, 0)
TextLabel.Font = Enum.Font.SourceSansSemibold
TextLabel.Text = "Arceus | Aimbot"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 16
MinButton.Parent = Frame2
MinButton.BackgroundTransparency = 1
MinButton.Position = UDim2.new(0.92957741, 0, 0, 0)
MinButton.Size = UDim2.new(0.0697798356, 0, 0.991438508, 0)
MinButton.Font = Enum.Font.SourceSansSemibold
MinButton.Text = "_"
MinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinButton.TextSize = 14
AimbotButton.Parent = Frame
AimbotButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
AimbotButton.BorderColor3 = Color3.fromRGB(20, 20, 20)
AimbotButton.Position = UDim2.new(0.0492957756, 0, 0.495575249, 0)
AimbotButton.Size = UDim2.new(0.0469483584, 0, 0.176991165, 0)
AimbotButton.Font = Enum.Font.SourceSansSemibold
AimbotButton.Text = ""
AimbotButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AimbotButton.TextScaled = true
AimbotButton.TextSize = 20
AimbotButton.TextWrapped = true
AimbotLabel.Parent = AimbotButton
AimbotLabel.BackgroundTransparency = 1
AimbotLabel.Position = UDim2.new(1.54999995, 0, 0, 0)
AimbotLabel.Size = UDim2.new(17.7999992, 0, 1, 0)
AimbotLabel.Font = Enum.Font.SourceSansSemibold
AimbotLabel.Text = "Aimbot"
AimbotLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AimbotLabel.TextSize = 16
AimbotLabel.TextWrapped = true
AimbotLabel.TextXAlignment = Enum.TextXAlignment.Left

local MinScript = Instance.new('LocalScript', MinButton)
local MinState = true
MinScript.Parent.MouseButton1Down:Connect(function()
    print("t")
    MinState = not MinState
    local LBSize = MinScript.Parent.Parent.AbsoluteSize
    local Tween = TweenService:Create(MinScript.Parent.Parent.Parent, TweenInfo.new(0.5, Enum.EasingStyle.Linear), {BackgroundTransparency = MinState and 0 or 1})
    Tween:Play()
    MinScript.Parent.Text = MinState and "_" or "+"
    for _, Child in pairs(MinScript.Parent.Parent.Parent:GetChildren()) do
        if Child:IsA("TextButton") then
            Child.Visible = MinState
            Child.TextLabel.Visible = MinState
        end
    end
end)

local AimbotScript = Instance.new('LocalScript', AimbotButton)
local AimbotState = false
AimbotScript.Parent.MouseButton1Down:Connect(function()
    AimbotState = not AimbotState
    AimbotScript.Parent.Text = AimbotState and "x" or ""
end)

local function LookAt(TargetPos, EyePos)
    Camera.CFrame = CFrame.new(EyePos, TargetPos)
end

local function GetClosestPlayer()
    local Nearest = nil
    local MinDist = math.huge
    local ViewportCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    for _, Plr in pairs(Players:GetPlayers()) do
        if Plr ~= Player and Player.Character and Plr.Character and Plr.Character:FindFirstChild("Head") then
            local HeadPos, Vis = Camera:WorldToViewportPoint(Plr.Character.Head.Position)
            local HeadViewportPos = Vector2.new(HeadPos.X, HeadPos.Y)
            local Dist = (HeadViewportPos - ViewportCenter).magnitude
            if Vis and Dist < MinDist and Dist < 400 then
                MinDist = Dist
                Nearest = Plr
            end
        end
    end
    return Nearest
end

RunService.RenderStepped:Connect(function()
    if AimbotState then
        local Closest = GetClosestPlayer()
        if Closest and Closest.Character:FindFirstChild("Head") then
            LookAt(Closest.Character.Head.Position, Camera.CFrame.p)
        end
    end
end)

local DragScript = Instance.new('LocalScript', Frame)
DragScript.Parent.Active = true
DragScript.Parent.Selectable = true
DragScript.Parent.Draggable = true
